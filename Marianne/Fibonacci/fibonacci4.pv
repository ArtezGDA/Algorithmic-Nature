size(512, 512)
background(0)

# Fibonacci as a recursive function
def fib(n):
    if n < 2:
        return 1
    return fib(n - 1) + fib(n - 2)

stroke(0)
fill(0)

# Start at center
x = WIDTH /2
y = HEIGHT /2

# create a variable for the direction for the next circle
direction = 0

for i in range(30):
    
    # variable s to optimize for speed
    s = fib(i) / 400
    
    # depending on the direction,
    # calculate the origin of the drawn oval
    # then set the x and y for the next oval
    
    stroke(10)
    if direction == 0:
        line(x, y, s, s)
        x = x + s
        y = y + s
    elif direction == 180:
        line(x - s, y, s, s)
        x = x - s
        y = y + s
    elif direction == 90:
        line(x - s, y - s, s, s)
        x = x - s
        y = y - s
    elif direction == 45:
        line(x, y - s, s, s)
        x = x + s
        y = y - s
        
    # Rotate with 90 degrees clockwise
    direction = direction - 45
    
    # If the direction becomes negative,
    # fix it to be positive
    if (direction == -45):
        direction = 180